# exec external process

defun exec (args: args) {
    args ::= $args map {| i | "" . $i};
    command ::= $args >>;

    d ::= dict [fork-exec $command $args];

    pid := $d,pid;

    out := $d,left;
    OUT ::= new File;
    $OUT set! $out mode: o;
    $OUT set-newline t;
    $OUT set-nobuffer;

    in := $d,right;
    IN ::= new File;
    $IN set! $in mode: i;
    $IN set-newline nil;
    $IN set-nobuffer;

    try {
	loop {
	    loop {
		if {$stdin ready? timeout: 50} then: {
		    r ::= $stdin gets;
		    if [nil? $r] else: {
			println file: $OUT $r;
			$OUT flush;
		    };
		} else: {
		    break;
		};
		if {$stdin eof?} then: {$OUT close :force; break};
	    };
	    if {$stdin eof?} then: {$OUT close :force};
	    
	    loop {
		if {$IN ready? timeout: 50} then: {
		    r ::= $IN gets;
		    if [nil? $r] else: {
			println $r;
			$stdout flush;
		    };
		} else: {
		    break;
		};
		if {$IN eof?} then: {break};
	    };

	    if {$IN eof?} then: {break};
	    if {sets? CO-MODE} then: {pause @WRITE};
	};
	
        $OUT close :force;

	REM { #------
	if {$IN eof?} else: {
	    set i 0;
 	    loop {
		if {$IN ready? timeout: 50} then: {
		    r ::= $IN gets;
		    if [nil? $r] else: {
			println $r;
			$stdout flush;
		    };
		} else: {
		    $i ++;
		    if {$i >= 3} then: {break};
		    if {$IN eof?} then: {break};
		    if {sets? CO-MODE} then: {pause @WRITE};
		};
		if {$IN eof?} then: {break};
	    };
	};
	}; #------
    }
    
    fin: {
	$OUT close :force;
	$IN close :force;
	if {[wait $pid] = 255} then: {throw ErrExecProgram "can\'t execute program."};
    }
    ;
};
